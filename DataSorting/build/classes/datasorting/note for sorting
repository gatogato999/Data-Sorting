A Sorting Algorithm is used to rearrange a given array or list elements
 according to a comparison operator on the elements.
 ////////////////////////////////////////////////////////////////////
The comparison operator
 is used to decide the new order of element in the respective data structure.
/////////////////////////////////////////////////////////////////////
Types of Sorting Algorithms:

                      |      best               |         average        |        worst
_______________|__________________|___________________|_______________
Quick Sort       |       Ω(n log(n))     |       Θ(n log(n))      |   O(n^2)
Bubble Sort      |       Ω(n)              |         Θ(n^2)          |   O(n^2)
Merge Sort       |       Ω(n log(n))    |   Θ(n log(n))	 |O(n log(n))
Insertion Sort   |       Ω(n)              |     Θ(n^2)              |       O(n^2)
Selection Sort   |       	Ω(n^2)         |    Θ(n^2)               |   O(n^2)
Heap Sort         |      Ω(n log(n))     | Θ(n log(n))            | O(n log(n))
_______________|__________________|___________________|_________________

/////////////////////////////////////////////////////////////////////
                                    Heap Sort :

A complete binary tree :
     is a binary tree in which every level
    (except possibly the last), is completely filled,
     and all nodes are as far left as possible .

A Binary Heap :  
   * is a Complete Binary Tree where items are stored in a special order 
        such that the value in a parent node is greater(or smaller) than
        the values in its two children nodes. 
   * The former is called max heap and the latter is called min-heap. 
   * The heap can be represented by a binary tree or array.

Why array based representation for Binary Heap? 
    * Since a Binary Heap is a Complete Binary Tree, 
            it can be easily represented as an array ,
            and the array-based representation is space-efficient. 
    * If the parent node is stored at index [k], 
            the left child can be calculated by 2 * k + 1 and 
            the right child by 2 * k + 2 (assuming the indexing starts at 0).

*the heapify :
    is the process of reshaping a binary tree into a Heap data structure.
* A binary tree :
    is a tree data structure that has two child nodes at max.
    If a node’s children nodes are ‘heapified’, 
    then only ‘heapify’ process can be applied over that node. 
    A heap should always be a complete binary tree. 

